include:
  - ../turtlebotrossim/docker/docker-compose.yaml
services:
  emqx:
    image: emqx:latest
    restart: always
    environment:
      EMQX_NAME: emqx
      EMQX_HOST: 127.0.0.1
    volumes:
      - vol-emqx-data:/opt/emqx/data
      - vol-emqx-etc:/opt/emqx/etc
      - vol-emqx-log:/opt/emqx/log
    network_mode: host
  redis:
    image: redis:latest
    network_mode: host
    restart: always
  rapdev:
    command: sleep infinity
    build:
      context: ..
      dockerfile: docker/Dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${UID:-1000}
        - USERNAME=${USERNAME:-devuser}
    user: ${USERNAME:-devuser}
    depends_on:
      - emqx
      - redis
      - rosmqttbridge
    network_mode: host
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - ${XAUTHORITY:-$HOME/.Xauthority}:/home/${USERNAME:-devuser}/.Xauthority
    environment:
      - DISPLAY=${DISPLAY}
  rapdevnogpu:
    extends: rapdev
    environment:
      - LIBGL_ALWAYS_SOFTWARE=1
  rapdevmesa:
    extends: rapdev
    volumes:
      - /dev/dri:/dev/dri
  rapdevnvidia:
    extends: rapdev
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]
  rosmqttbridge:
    build:
      context: ../ros2mqttbridge/
      args:
        - ROS_DISTRO=humble
      dockerfile: docker/DockerfileDeploy
    image: base
    environment:
      - RUST_LOG=ros2mqttbridge::bridge=INFO
    network_mode: host
    volumes:
      - /dev/shm:/dev/shm
      - /var/run/docker.sock:/var/run/docker.sock
  rosmqttbridgepython:
    build:
      context: ..
      dockerfile: docker/Dockerfile.rosmqttbridge
      args:
        - ROS_DISTRO=humble
    image: base
    command: python3 ROS2MqttBridge.py
    network_mode: host
    volumes:
      - /dev/shm:/dev/shm
  devfullnogputb3:
    extends: rapdevnogpu
    depends_on: [ simdeploynogputb3, rosmqttbridge, redis, emqx ]
  devfullmesatb3:
    extends: rapdevmesa
    depends_on: [ simdeploymesatb3, rosmqttbridge, redis, emqx ]
  devfullnvidiatb3:
    extends: rapdevnvidia
    depends_on: [ simdeploynvidiatb3, rosmqttbridge, redis, emqx ]
  devfullnogputb4:
    extends: rapdevnogpu
    depends_on: [ simdeploynogputb4, rosmqttbridge, redis, emqx ]
  devfulldevmesatb4:
    extends: rapdevmesa
    depends_on: [ simdeploymesatb4, rosmqttbridge, redis, emqx ]
  devfullnvidiatb4:
    extends: rapdevnvidia
    depends_on: [ simdeploynvidiatb4, rosmqttbridge, redis, emqx ]
  trustworthiness-checker:
    build:
      context: ../trustworthiness-checker
      dockerfile: docker/DockerfileDeploy
    network_mode: host
    volumes:
      - ../trustworthiness-specs:/mnt/host_models
      - /dev/shm:/dev/shm # It can use unique shared memory. Necessary for ROS channels to use to transfer data on the same machine.
  trustworthiness-checker-maple-seq:
    extends: trustworthiness-checker
    command: /mnt/host_models/maple_seq.lola --input-mqtt-topics stage --output-mqtt-topics m a p l e maple

volumes:
  vol-emqx-data:
    name: foo-emqx-data
  vol-emqx-etc:
    name: foo-emqx-etc
  vol-emqx-log:
    name: foo-emqx-log
